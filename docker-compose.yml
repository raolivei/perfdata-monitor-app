version: '3'

networks:
  container-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus  
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - container-net

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro    
    restart: unless-stopped
    ports:
      - 8080:8080
    networks: 
      - container-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}   
    depends_on:
      - prometheus
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - container-net     

  terraform-resgen:
    image: terraform-resgen:latest
    container_name: terraform-resgen
    build:
      context: ./terraform-resgen/
      #using Dockerfile as build argument
      dockerfile: Dockerfile-terraform-resgen
    command: bash -c 'ruby resource-collector.rb'
    restart: unless-stopped  
    networks: 
      - container-net
